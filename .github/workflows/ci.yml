# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # Label of the container job
  build:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that executes in
    container: node:14-alpine

    strategy:
      matrix:
        node-version: [12.x, 14.x, 15.x]

    # Service containers to run with
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install dependencies
        run: npm ci


      # Install psql tool
      # psql not provided in image from the box
      - run: apk add --no-cache postgresql-client

      # Set up DB
      - name: Create new postgres user
        run: PGPASSWORD=postgres psql -h postgres -U postgres -c "CREATE USER \"imnetcat\" WITH PASSWORD 'imnetcat';"
      - name: Create new db
        run: PGPASSWORD=postgres psql -h postgres -U postgres -c "CREATE DATABASE \"imnetcat\" OWNER \"imnetcat\";"

      - name: Setup the database schema
        run: PGPASSWORD=imnetcat   psql -h postgres -d imnetcat -U imnetcat -f application/db/structure.sql

      - name: Fill db with data
        run: PGPASSWORD=imnetcat   psql -h postgres -d imnetcat -U imnetcat -f application/db/data.sql

      - name: Run tests
        run: npm test
